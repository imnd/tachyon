<?phpnamespace tachyon\traits;/** * Трейт атрибутов * * @author Андрей Сердюк * @copyright (c) 2020 IMND */trait HasAttributes{    /**     * массив [поле => значение] для соотв. аттрибутов модели     */    protected $attributes = [];    /**     * список типов полей формы для соотв. аттрибутов модели     *     * @return array     */    protected $attributeTypes = [];    /**     * список названий аттрибутов модели     *     * @return array     */    protected $attributeNames = [];    public function __get($var)    {        // в случае, если есть такое поле и его значение задано        return $this->attributes[$var] ?? null;    }    public function __set($var, $val)    {        $method = 'set' . ucfirst($var);        if (method_exists($this, $method)) {            return $this->$method($val);        }        if (!isset($this->$var)) {            $this->attributes[$var] = $val;        }    }    /**     * Присваивание значения аттрибуту модели     *     * @param $attribute     * @param $value string     *     * @return mixed     */    public function setAttribute($attribute, $value)    {        $this->attributes[$attribute] = $value;        return $this;    }    /**     * Извлечение значения аттрибута $name     *     * @param string $name     *     * @return mixed     */    public function getAttribute(string $name)    {        return $this->attributes[$name];    }    /**     * Присваивание значений аттрибутам модели     *     * @param $attributes array     *     * @return mixed     */    public function setAttributes(array $attributes)    {        foreach ($attributes as $name => $value) {            if (array_key_exists($name, $this->attributes)) {                $this->attributes[$name] = $value;            }        }        return $this;    }    /**     * Возвращает аттрибуты модели     *     * @returns array     */    public function getAttributes()    {        return $this->attributes;    }    /**     * Возвращает название аттрибута модели     *     * @param $key string     *     * @return array     */    public function getAttributeName($key)    {        if (array_key_exists($key, $this->attributeNames)) {            $attributeName = $this->attributeNames[$key];            if (is_array($attributeName)) {                return $attributeName[$this->lang->getLanguage()];            }            return $attributeName;        }        return ucfirst($key);    }    /**     * Возвращает типы аттрибутов модели     *     * @return array     */    public function getAttributeTypes()    {        return $this->attributeTypes;    }    /**     * возвращает тип аттрибута модели     *     * @param $key string     *     * @return null|string     */    public function getAttributeType($key)    {        return $this->attributeTypes[$key] ?? null;    }}