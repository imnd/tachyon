<?phpnamespace tachyon\traits;use tachyon\Model;/** * Трейт атрибутов * * @author imndsu@gmail.com */trait HasAttributes{    /**     * массив [поле => значение] для соотв. аттрибутов модели     */    protected array $attributes = [];    /**     * список типов полей формы для соотв. аттрибутов модели     */    protected array $attributeTypes = [];    /**     * список названий аттрибутов модели     */    protected array $attributeNames = [];    public function __get(string $var)    {        // в случае, если есть такое поле и его значение задано        return $this->attributes[$var] ?? null;    }    public function __set(string $var, $val)    {        $method = 'set' . ucfirst($var);        if (method_exists($this, $method)) {            return $this->$method($val);        }        if (!isset($this->$var)) {            $this->attributes[$var] = $val;        }    }    public function __isset(string $var)    {        return isset($this->attributes[$var]);    }    /**     * Присваивание значения аттрибуту модели     */    public function setAttribute(string $attribute, string $value): static    {        $this->attributes[$attribute] = $value;        return $this;    }    /**     * Извлечение значения аттрибута $name     */    public function getAttribute(string $name): mixed    {        return $this->attributes[$name];    }    /**     * Присваивание значений аттрибутам модели     */    public function setAttributes(array $attributes): Model    {        foreach ($attributes as $name => $value) {            if (array_key_exists($name, $this->attributes)) {                $this->attributes[$name] = $value;            }        }        return $this;    }    /**     * Возвращает аттрибуты модели     */    public function getAttributes(): array    {        return $this->attributes;    }    /**     * Возвращает название аттрибута модели     */    public function getAttributeName(string $key): string    {        if (array_key_exists($key, $this->attributeNames)) {            $attributeName = $this->attributeNames[$key];            if (is_array($attributeName)) {                return $attributeName[$this->lang->getLanguage()];            }            return $attributeName;        }        return ucfirst($key);    }    /**     * Возвращает типы аттрибутов модели     */    public function getAttributeTypes(): array    {        return $this->attributeTypes;    }    /**     * возвращает тип аттрибута модели     */    public function getAttributeType(string $key): ?string    {        return $this->attributeTypes[$key] ?? null;    }}